# frozen_string_literal: true

Bidi2pdfRails.configure do |config|
  overrides = Rails.application.config.x.bidi2pdf_rails

  config.notification_service = ActiveSupport::Notifications

  config.logger = Rails.logger
  config.verbosity = overrides.verbosity.nil? ? :none : overrides.verbosity
  config.default_timeout = 10

  # Chrome & BiDi
  # config.remote_browser_url = nil
  config.headless = overrides.headless.nil? ? <%= @headless ? "true" : "false" %> : overrides.headless
  #
  # alternative to remote_browser_url
  #
  # config.chromedriver_port = 0
  # config.chrome_session_args = [
  #   "--disable-gpu",
  #   "--no-sandbox"
  # ]

<% if @proxy %>
  config.proxy_addr = "<%= @proxy_addr %>"
  config.proxy_port = <%= @proxy_port %>
  config.proxy_user = nil
  config.proxy_pass = nil
<% else %>
  # config.proxy_addr = nil
  # config.proxy_port = nil
  # config.proxy_user = nil
  # config.proxy_pass = nil
<% end %>

  # PDF settings (css media settings take precedence over these)
<% if @configure_pdf %>

  config.pdf_orientation = "<%= @pdf_orientation || "portrait" %>"
  <% if @pdf_margins %>
  config.pdf_margin_top = <%= @pdf_margin_top || 2.5 %>
  config.pdf_margin_bottom = <%= @pdf_margin_bottom || 2 %>
  config.pdf_margin_left = <%= @pdf_margin_left || 2 %>
  config.pdf_margin_right = <%= @pdf_margin_right || 2 %>
  <% else %>
  # config.pdf_margin_top = 2.5
  # config.pdf_margin_bottom = 2
  # config.pdf_margin_left = 2
  # config.pdf_margin_right = 2
  <% end %>

  <% if @pdf_page %>
    # Page settings
    config.pdf_page_width = <%= @pdf_page_width || Bidi2pdf::PAPER_FORMATS_CM[:a4][:width] %>
    config.pdf_page_height = <%= @pdf_page_height || Bidi2pdf::PAPER_FORMATS_CM[:a4][:height] %>
  <% else %>
    # Page settings
    # config.pdf_page_format = "A4"
    #
    # or custom page size
    #
    # config.pdf_page_width = <%= Bidi2pdf::PAPER_FORMATS_CM[:a4][:width] %>
    # config.pdf_page_height = <%= Bidi2pdf::PAPER_FORMATS_CM[:a4][:height] %>
  <% end %>

  config.pdf_print_background = <%= @pdf_print_background ? "true" : "false" %>
  config.pdf_scale = <%= @pdf_scale || 1.0 %>
  config.shrink_to_fit = <%= @shrink_to_fit ? "true" : "false" %>
<% else %>
  # config.pdf_orientation = "portrait"
  # config.pdf_margin_top = 2.5
  # config.pdf_margin_bottom = 2
  # config.pdf_margin_left = 2
  # config.pdf_margin_right = 2
  # config.pdf_print_background = true
  # config.pdf_scale = 1.0
  # config.shrink_to_fit = true

  # Page settings
  # config.pdf_page_format = "A4"
  #
  # or custom page size
  #
  # config.pdf_page_width = <%= Bidi2pdf::PAPER_FORMATS_CM[:a4][:width] %>
  # config.pdf_page_height = <%= Bidi2pdf::PAPER_FORMATS_CM[:a4][:height] %>
<% end %>

  # config.cookies = [
  #   { name: "session", value: "abc123", domain: "example.com" }
  # ]

  # config.headers = {
  #   "X-API-KEY" => "topsecret"
  # }

  # config.auth = {
  #   username: "admin",
  #   password: "secret"
  # }

  # chromedriver install dir
  # config.install_dir = Rails.root.join("tmp", "bidi2pdf").to_s

  # wait for the page to load settings
  # config.wait_for_network_idle = true
  # config.wait_for_page_loaded = false
  # this script can be any valid JS script that returns a Promise
  # it will wait for the Promise to resolve
  # config.wait_for_page_check_script = nil
end

Rails.application.config.after_initialize do
  Bidi2pdfRails::MainLogSubscriber.attach_to "bidi2pdf", inherit_all: true # needed for imported methods
  Bidi2pdfRails::MainLogSubscriber.attach_to "bidi2pdf_rails", inherit_all: true # needed for imported methods

  Bidi2pdfRails::BrowserConsoleLogSubscriber.attach_to "bidi2pdf"

  Bidi2pdfRails::MainLogSubscriber.silence /network_event_.*\.bidi2pdf/

  Bidi2pdfRails::NetworkLogSubscriber.attach_to "bidi2pdf"
end
